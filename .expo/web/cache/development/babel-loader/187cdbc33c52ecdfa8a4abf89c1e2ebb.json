{"ast":null,"code":"import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer, useTheme } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nvar Tab = createBottomTabNavigator();\nimport { Ionicons } from '@expo/vector-icons';\nimport AddTodo from \"../screen/addtodo\";\nimport FinishTodo from \"../screen/finishedtodo\";\nimport Todo from \"../screen/todo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Container() {\n  return _jsx(NavigationContainer, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerMode: 'screen',\n        headerTintColor: 'white',\n        headerStyle: {\n          backgroundColor: theme.colors.primary['900']\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Hello\") {\n            iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n          } else if (route.name == \"Form\") {\n            iconName = focused ? \"ios-information-circle\" : \"ios-information-circle-outline\";\n          } else if (route.name == \"Social Media\") {\n            iconName = focused ? \"ios-list-circle\" : \"ios-list-circle-outline\";\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    children: _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Todo\",\n        component: Todo\n      }), _jsx(Tab.Screen, {\n        name: \"Add todo\",\n        component: AddTodo\n      }), _jsx(Tab.Screen, {\n        name: \"Finish todo\",\n        component: FinishTodo\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["D:/pelatihan/batch 29/react native/todolist/src/route/container.js"],"names":["createStackNavigator","NavigationContainer","useTheme","createBottomTabNavigator","Tab","Ionicons","AddTodo","FinishTodo","Todo","Container","route","headerMode","headerTintColor","headerStyle","backgroundColor","theme","colors","primary","tabBarIcon","focused","color","size","iconName","name"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,EAA8BC,QAA9B,QAA8C,0BAA9C;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,IAAMC,GAAG,GAAGD,wBAAwB,EAApC;AACA,SAASE,QAAT,QAAyB,oBAAzB;AACA,OAAOC,OAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,SACM,KAAC,mBAAD;AACA,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC3BC,QAAAA,UAAU,EAAE,QADe;AAE3BC,QAAAA,eAAe,EAAE,OAFU;AAG3BC,QAAAA,WAAW,EAAE;AAAEC,UAAAA,eAAe,EAAEC,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqB,KAArB;AAAnB,SAHc;AAI3BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACtC,cAAIC,QAAJ;;AAEA,cAAGZ,KAAK,CAACa,IAAN,KAAe,OAAlB,EAA0B;AACtBD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,kBAAlC;AACH,WAFD,MAEO,IAAIT,KAAK,CAACa,IAAN,IAAc,MAAlB,EAA0B;AAC7BD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,wBAAH,GAA8B,gCAAhD;AACH,WAFM,MAEA,IAAIT,KAAK,CAACa,IAAN,IAAc,cAAlB,EAAkC;AACrCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,iBAAH,GAAuB,yBAAzC;AACH;;AAED,iBAAO,KAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YAAP;AACH;AAhB0B,OAAhB;AAAA,KADf;AAAA,cAmBI,MAAC,GAAD,CAAK,SAAL;AAAA,iBACI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEZ;AAAnC,QADJ,EAEI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,SAAS,EAAEF;AAAvC,QAFJ,EAGI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,aAAjB;AAA+B,QAAA,SAAS,EAAEC;AAA1C,QAHJ;AAAA;AAnBJ,IADN;AA2BD","sourcesContent":["import { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer, useTheme } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nconst Tab = createBottomTabNavigator();\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport AddTodo from '../screen/addtodo';\r\nimport FinishTodo from '../screen/finishedtodo';\r\nimport Todo from '../screen/todo';\r\n\r\nexport default function Container() {\r\n  return (\r\n        <NavigationContainer\r\n        screenOptions={({ route }) => ({\r\n            headerMode: 'screen',\r\n            headerTintColor: 'white',\r\n            headerStyle: { backgroundColor: theme.colors.primary['900'] },\r\n            tabBarIcon: ({ focused, color, size }) => {\r\n                let iconName;\r\n\r\n                if(route.name === \"Hello\"){\r\n                    iconName = focused ? \"ios-home\" : \"ios-home-outline\"\r\n                } else if (route.name == \"Form\") {\r\n                    iconName = focused ? \"ios-information-circle\" : \"ios-information-circle-outline\"\r\n                } else if (route.name == \"Social Media\") {\r\n                    iconName = focused ? \"ios-list-circle\" : \"ios-list-circle-outline\"\r\n                }\r\n\r\n                return <Ionicons name={iconName} size={size} color={color} />\r\n            },})}\r\n        >\r\n            <Tab.Navigator>\r\n                <Tab.Screen name=\"Todo\" component={Todo} />\r\n                <Tab.Screen name=\"Add todo\" component={AddTodo} />\r\n                <Tab.Screen name=\"Finish todo\" component={FinishTodo} />\r\n            </Tab.Navigator>\r\n        </NavigationContainer>\r\n        );\r\n}"]},"metadata":{},"sourceType":"module"}