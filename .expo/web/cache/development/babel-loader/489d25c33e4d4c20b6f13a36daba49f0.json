{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport * as Animatable from 'react-native-animatable';\nimport Collapsible from 'react-native-collapsible';\nimport Accordion from 'react-native-collapsible/Accordion';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CONTENT = [{\n  id: 1,\n  title: 'Terms and Conditions',\n  jam: 12.00,\n  content: 'The following terms and conditions, together with any referenced documents form a legal agreement between you and your employer, employees,agents, contractors and any other entity on whose behalf you accept these terms'\n}, {\n  id: 2,\n  title: 'Privacy Policy',\n  jam: 12.00,\n  content: 'A Privacy Policy agreement is the agreement where you specify if you collect personal data from your users,what kind of personal data you collect and what you dowith that data.'\n}, {\n  id: 3,\n  title: 'Return Policy',\n  jam: 12.00,\n  content: \"Our Return & Refund Policy template lets you get started with a Return and Refund Policy agreement. This template is free to download and use. According to TrueShip study, over 60% of customers review a Return/Refund      Policy before they make a purchasing decision.\"\n}];\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSections = _useState2[0],\n      setActiveSections = _useState2[1];\n\n  var setSections = function setSections(sections) {\n    setActiveSections(sections.includes(undefined) ? [] : sections);\n  };\n\n  var renderHeader = function renderHeader(section, _, isActive) {\n    return _jsx(Animatable.View, {\n      duration: 400,\n      style: [styles.header, isActive ? styles.active : styles.inactive],\n      transition: \"backgroundColor\",\n      children: _jsx(Text, {\n        style: styles.headerText,\n        children: section.title\n      })\n    });\n  };\n\n  var renderContent = function renderContent(section, _, isActive) {\n    return _jsxs(Animatable.View, {\n      duration: 400,\n      style: [styles.content, isActive ? styles.active : styles.inactive],\n      transition: \"backgroundColor\",\n      children: [_jsxs(Text, {\n        children: [\"Keterangan:\", section.content]\n      }), _jsxs(Text, {\n        children: [\"Jam:\", section.jam]\n      }), _jsx(Pressable, {\n        style: styles.btn,\n        children: _jsx(Text, {\n          style: styles.btntxt,\n          children: \"Done\"\n        })\n      })]\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(ScrollView, {\n        children: _jsx(Accordion, {\n          activeSections: activeSections,\n          sections: CONTENT,\n          renderHeader: renderHeader,\n          renderContent: renderContent,\n          duration: 400,\n          onChange: setSections\n        })\n      })\n    })\n  });\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    marginLeft: 20\n  },\n  headerText: {\n    textAlign: 'left',\n    marginLeft: 20,\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  content: {\n    padding: 20,\n    backgroundColor: '#fff',\n    color: 'black'\n  },\n  active: {\n    backgroundColor: 'white'\n  },\n  inactive: {\n    backgroundColor: 'gray'\n  },\n  header: {\n    color: 'white',\n    marginTop: 10,\n    width: 330,\n    height: 30,\n    borderRadius: 5\n  },\n  btn: {\n    marginLeft: 250,\n    backgroundColor: 'green',\n    borderRadius: 5,\n    width: 50,\n    height: 30,\n    marginTop: 20\n  },\n  btntxt: {\n    marginLeft: 5,\n    color: 'white',\n    marginTop: 5,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["D:/pelatihan/batch 29/react native/todolist/src/screen/todo.js"],"names":["React","useState","Animatable","Collapsible","Accordion","CONTENT","id","title","jam","content","App","activeSections","setActiveSections","setSections","sections","includes","undefined","renderHeader","section","_","isActive","styles","header","active","inactive","headerText","renderContent","btn","btntxt","flex","container","StyleSheet","create","paddingTop","marginLeft","textAlign","fontSize","fontWeight","color","padding","backgroundColor","marginTop","width","height","borderRadius"],"mappings":"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","sourcesContent":["// import React in our code\r\nimport React, {useState} from 'react';\r\n\r\n// import all the components we are going to use\r\nimport {\r\n  SafeAreaView,\r\n\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  View,Pressable\r\n } from 'react-native';\r\n\r\n// import for the animation of Collapse and Expand\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\n// import for the collapsible/Expandable view\r\nimport Collapsible from 'react-native-collapsible';\r\n\r\n// import for the Accordion view\r\nimport Accordion from 'react-native-collapsible/Accordion';\r\n\r\n// Dummy content to show\r\n// You can also use dynamic data by calling web service\r\nconst CONTENT = [\r\n  {\r\n    id:1,  \r\n    title: 'Terms and Conditions',\r\n    jam:12.00,\r\n    content:\r\n      'The following terms and conditions, together with any referenced documents form a legal agreement between you and your employer, employees,agents, contractors and any other entity on whose behalf you accept these terms',\r\n  },\r\n  {\r\n    id:2,  \r\n    title: 'Privacy Policy',\r\n    jam:12.00,\r\n    content:\r\n      'A Privacy Policy agreement is the agreement where you specify if you collect personal data from your users,what kind of personal data you collect and what you dowith that data.',\r\n  },\r\n  { id:3,  \r\n    title: 'Return Policy',\r\n    jam:12.00,\r\n    content:\r\n      \"Our Return & Refund Policy template lets you get started with a Return and Refund Policy agreement. This template is free to download and use. According to TrueShip study, over 60% of customers review a Return/Refund      Policy before they make a purchasing decision.\",\r\n  },\r\n];\r\n\r\n//To make the selector (Something like tabs)\r\n\r\nconst App = () => {\r\n  // Default active selector\r\n  const [activeSections, setActiveSections] = useState([]);\r\n  // Collapsed condition for the single collapsible\r\n  const setSections = (sections) => {\r\n    // Setting up a active section state\r\n    setActiveSections(\r\n      sections.includes(undefined) ? [] : sections\r\n    );\r\n  };\r\n  const renderHeader = (section, _, isActive) => {\r\n    // Accordion header view\r\n    return (\r\n      <Animatable.View\r\n        duration={400}\r\n        style={[\r\n          styles.header,\r\n          isActive ? styles.active : styles.inactive\r\n        ]}\r\n        transition=\"backgroundColor\">\r\n        <Text style={styles.headerText}>\r\n          {section.title}\r\n        </Text>\r\n      </Animatable.View>\r\n    );\r\n  };\r\n\r\n  const renderContent = (section, _, isActive) => {\r\n    // Accordion Content view\r\n    return (\r\n      <Animatable.View\r\n        duration={400}\r\n        style={[\r\n          styles.content,\r\n          isActive ? styles.active : styles.inactive\r\n        ]}\r\n        transition=\"backgroundColor\">\r\n        <Text>Keterangan:{section.content}</Text>\r\n        <Text>Jam:{section.jam}</Text>\r\n        <Pressable style={styles.btn}><Text style={styles.btntxt}>Done</Text></Pressable>\r\n      </Animatable.View>\r\n    );\r\n  };\r\n  return (\r\n    <SafeAreaView style={{flex: 1}}>\r\n      <View style={styles.container}>\r\n        <ScrollView>\r\n        <Accordion\r\n            activeSections={activeSections}\r\n            // For any default active section\r\n            sections={CONTENT}\r\n            // If you want to expand multiple at a time\r\n            renderHeader={renderHeader}\r\n            // Header Component(View) to render\r\n            renderContent={renderContent}\r\n            // Content Component(View) to render\r\n            duration={400}\r\n            // Duration for Collapse and expand\r\n            onChange={setSections}\r\n            // Setting the state of active sections\r\n          />\r\n\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 20,\r\n    marginLeft:20\r\n  },\r\n  headerText: {\r\n    textAlign: 'left',\r\n    marginLeft:20,\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color:'black'\r\n  },\r\n  content: {\r\n    padding: 20,\r\n    backgroundColor: '#fff',\r\n    color:'black'\r\n  },\r\n  active: {\r\n    backgroundColor: 'white',\r\n  },\r\n  inactive: {\r\n    backgroundColor: 'gray',\r\n  },\r\n  header:{\r\n      color:'white',\r\n      marginTop:10,\r\n      width:330,\r\n      height:30,\r\n      borderRadius:5\r\n  },\r\n  btn :{\r\n    marginLeft:250,backgroundColor:'green',borderRadius:5, width:50,height:30,marginTop:20\r\n  },\r\n  btntxt:{\r\n    marginLeft:5,color:'white',marginTop:5,fontWeight:'bold'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}