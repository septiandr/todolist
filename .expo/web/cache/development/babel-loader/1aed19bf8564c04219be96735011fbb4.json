{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer, useTheme } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nvar Tab = createBottomTabNavigator();\nimport { Ionicons } from '@expo/vector-icons';\nimport AddTodo from \"../screen/addtodo\";\nimport FinishTodo from \"../screen/finishedtodo\";\nimport Todo from \"../screen/todo\";\nimport React from 'react';\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nexport default function Container() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.scrollView,\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    }),\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Todo\",\n          component: Todo\n        }), _jsx(Tab.Screen, {\n          name: \"Add todo\",\n          component: AddTodo\n        }), _jsx(Tab.Screen, {\n          name: \"Finish todo\",\n          component: FinishTodo\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollView: {\n    flex: 1,\n    backgroundColor: 'pink',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/pelatihan/batch 29/react native/todolist/src/route/container.js"],"names":["NavigationContainer","useTheme","createBottomTabNavigator","Tab","Ionicons","AddTodo","FinishTodo","Todo","React","wait","timeout","Promise","resolve","setTimeout","Container","useState","refreshing","setRefreshing","onRefresh","useCallback","then","styles","scrollView","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,mBAAT,EAA8BC,QAA9B,QAA8C,0BAA9C;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,IAAMC,GAAG,GAAGD,wBAAwB,EAApC;AACA,SAASE,QAAT,QAAyB,oBAAzB;AACA,OAAOC,OAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,OAAD,EAAa;AACxB,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,OAAV,CAAd;AAAA,GAAnB,CAAP;AACD,CAFD;;AAIA,eAAe,SAASI,SAAT,GAAqB;AAChC,wBAAoCN,KAAK,CAACO,QAAN,CAAe,KAAf,CAApC;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,SAAS,GAAGV,KAAK,CAACW,WAAN,CAAkB,YAAM;AACxCF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAR,IAAAA,IAAI,CAAC,IAAD,CAAJ,CAAWW,IAAX,CAAgB;AAAA,aAAMH,aAAa,CAAC,KAAD,CAAnB;AAAA,KAAhB;AACD,GAHiB,EAGf,EAHe,CAAlB;AAIF,SACI,KAAC,UAAD;AACA,IAAA,qBAAqB,EAAEI,MAAM,CAACC,UAD9B;AAEA,IAAA,cAAc,EACZ,KAAC,cAAD;AACE,MAAA,UAAU,EAAEN,UADd;AAEE,MAAA,SAAS,EAAEE;AAFb,MAHF;AAAA,cASE,KAAC,mBAAD;AAAA,gBACI,MAAC,GAAD,CAAK,SAAL;AAAA,mBACI,KAAC,GAAD,CAAK,MAAL;AAAY,UAAA,IAAI,EAAC,MAAjB;AAAwB,UAAA,SAAS,EAAEX;AAAnC,UADJ,EAEI,KAAC,GAAD,CAAK,MAAL;AAAY,UAAA,IAAI,EAAC,UAAjB;AAA4B,UAAA,SAAS,EAAEF;AAAvC,UAFJ,EAGI,KAAC,GAAD,CAAK,MAAL;AAAY,UAAA,IAAI,EAAC,aAAjB;AAA+B,UAAA,SAAS,EAAEC;AAA1C,UAHJ;AAAA;AADJ;AATF,IADJ;AAmBD;AAGD,IAAMe,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG,GADkB;AAI7BJ,EAAAA,UAAU,EAAE;AACVI,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AAJiB,CAAlB,CAAf","sourcesContent":["import { NavigationContainer, useTheme } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nconst Tab = createBottomTabNavigator();\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport AddTodo from '../screen/addtodo';\r\nimport FinishTodo from '../screen/finishedtodo';\r\nimport Todo from '../screen/todo';\r\nimport React from 'react';\r\nimport { RefreshControl, SafeAreaView, ScrollView, StyleSheet, Text } from 'react-native';\r\n\r\nconst wait = (timeout) => {\r\n  return new Promise(resolve => setTimeout(resolve, timeout));\r\n}\r\n\r\nexport default function Container() {\r\n    const [refreshing, setRefreshing] = React.useState(false);\r\n\r\n    const onRefresh = React.useCallback(() => {\r\n      setRefreshing(true);\r\n      wait(2000).then(() => setRefreshing(false));\r\n    }, []);\r\n  return (\r\n      <ScrollView\r\n      contentContainerStyle={styles.scrollView}\r\n      refreshControl={\r\n        <RefreshControl\r\n          refreshing={refreshing}\r\n          onRefresh={onRefresh}\r\n        />\r\n      }\r\n      >\r\n        <NavigationContainer>\r\n            <Tab.Navigator>\r\n                <Tab.Screen name=\"Todo\" component={Todo} />\r\n                <Tab.Screen name=\"Add todo\" component={AddTodo} />\r\n                <Tab.Screen name=\"Finish todo\" component={FinishTodo} />\r\n            </Tab.Navigator>\r\n        </NavigationContainer>\r\n        </ScrollView>\r\n        );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    scrollView: {\r\n      flex: 1,\r\n      backgroundColor: 'pink',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  });\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}