{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Accordion from 'react-native-collapsible/Accordion';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SECTIONS = [{\n  title: 'First',\n  content: 'Lorem ipsum...'\n}, {\n  title: 'Second',\n  content: 'Lorem ipsum...'\n}];\n\nvar AccordionView = function (_Component) {\n  _inherits(AccordionView, _Component);\n\n  var _super = _createSuper(AccordionView);\n\n  function AccordionView() {\n    var _this;\n\n    _classCallCheck(this, AccordionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      activeSections: []\n    };\n\n    _this._renderSectionTitle = function (section) {\n      return _jsx(View, {\n        style: styles.content,\n        children: _jsx(Text, {\n          children: section.content\n        })\n      });\n    };\n\n    _this._renderHeader = function (section) {\n      return _jsx(View, {\n        style: styles.header,\n        children: _jsx(Text, {\n          style: styles.headerText,\n          children: section.title\n        })\n      });\n    };\n\n    _this._renderContent = function (section) {\n      return _jsx(View, {\n        style: styles.content,\n        children: _jsx(Text, {\n          children: section.content\n        })\n      });\n    };\n\n    _this._updateSections = function (activeSections) {\n      _this.setState({\n        activeSections: activeSections\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AccordionView, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(Accordion, {\n        sections: SECTIONS,\n        activeSections: this.state.activeSections,\n        renderSectionTitle: this._renderSectionTitle,\n        renderHeader: this._renderHeader,\n        renderContent: this._renderContent,\n        onChange: this._updateSections\n      });\n    }\n  }]);\n\n  return AccordionView;\n}(Component);","map":{"version":3,"sources":["D:/pelatihan/batch 29/react native/todolist/App.js"],"names":["React","Component","Accordion","SECTIONS","title","content","AccordionView","state","activeSections","_renderSectionTitle","section","styles","_renderHeader","header","headerText","_renderContent","_updateSections","setState"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;AAEA,IAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,OAAO,EAAE;AAFX,CADe,EAKf;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,OAAO,EAAE;AAFX,CALe,CAAjB;;IAWMC,a;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,cAAc,EAAE;AADV,K;;UAIRC,mB,GAAsB,UAACC,OAAD,EAAa;AACjC,aACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACN,OAApB;AAAA,kBACE,KAAC,IAAD;AAAA,oBAAOK,OAAO,CAACL;AAAf;AADF,QADF;AAKD,K;;UAEDO,a,GAAgB,UAACF,OAAD,EAAa;AAC3B,aACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,MAApB;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA,oBAAiCJ,OAAO,CAACN;AAAzC;AADF,QADF;AAKD,K;;UAEDW,c,GAAiB,UAACL,OAAD,EAAa;AAC5B,aACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACN,OAApB;AAAA,kBACE,KAAC,IAAD;AAAA,oBAAOK,OAAO,CAACL;AAAf;AADF,QADF;AAKD,K;;UAEDW,e,GAAkB,UAACR,cAAD,EAAoB;AACpC,YAAKS,QAAL,CAAc;AAAET,QAAAA,cAAc,EAAdA;AAAF,OAAd;AACD,K;;;;;;;WAED,kBAAS;AACP,aACE,KAAC,SAAD;AACE,QAAA,QAAQ,EAAEL,QADZ;AAEE,QAAA,cAAc,EAAE,KAAKI,KAAL,CAAWC,cAF7B;AAGE,QAAA,kBAAkB,EAAE,KAAKC,mBAH3B;AAIE,QAAA,YAAY,EAAE,KAAKG,aAJrB;AAKE,QAAA,aAAa,EAAE,KAAKG,cALtB;AAME,QAAA,QAAQ,EAAE,KAAKC;AANjB,QADF;AAUD;;;;EA5CyBf,S","sourcesContent":["import React, { Component } from 'react';\nimport Accordion from 'react-native-collapsible/Accordion';\n\nconst SECTIONS = [\n  {\n    title: 'First',\n    content: 'Lorem ipsum...',\n  },\n  {\n    title: 'Second',\n    content: 'Lorem ipsum...',\n  },\n];\n\nclass AccordionView extends Component {\n  state = {\n    activeSections: [],\n  };\n\n  _renderSectionTitle = (section) => {\n    return (\n      <View style={styles.content}>\n        <Text>{section.content}</Text>\n      </View>\n    );\n  };\n\n  _renderHeader = (section) => {\n    return (\n      <View style={styles.header}>\n        <Text style={styles.headerText}>{section.title}</Text>\n      </View>\n    );\n  };\n\n  _renderContent = (section) => {\n    return (\n      <View style={styles.content}>\n        <Text>{section.content}</Text>\n      </View>\n    );\n  };\n\n  _updateSections = (activeSections) => {\n    this.setState({ activeSections });\n  };\n\n  render() {\n    return (\n      <Accordion\n        sections={SECTIONS}\n        activeSections={this.state.activeSections}\n        renderSectionTitle={this._renderSectionTitle}\n        renderHeader={this._renderHeader}\n        renderContent={this._renderContent}\n        onChange={this._updateSections}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}