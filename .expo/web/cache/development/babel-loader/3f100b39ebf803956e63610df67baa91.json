{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Animatable from 'react-native-animatable';\nimport Collapsible from 'react-native-collapsible';\nimport Accordion from 'react-native-collapsible/Accordion';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CONTENT = [{\n  title: 'Terms and Conditions',\n  content: 'The following terms and conditions, together with any referenced documents form a legal agreement between you and your employer, employees,agents, contractors and any other entity on whose behalf you accept these terms'\n}, {\n  title: 'Privacy Policy',\n  content: 'A Privacy Policy agreement is the agreement where you specify if you collect personal data from your users,what kind of personal data you collect and what you dowith that data.'\n}, {\n  title: 'Return Policy',\n  content: \"Our Return & Refund Policy template lets you get started with a Return and Refund Policy agreement. This template is free to download and use. According to TrueShip study, over 60% of customers review a Return/Refund      Policy before they make a purchasing decision.\"\n}];\nvar SELECTORS = [{\n  title: 'T&C',\n  value: 0\n}, {\n  title: 'Privacy Policy',\n  value: 1\n}, {\n  title: 'Return Policy',\n  value: 2\n}, {\n  title: 'Reset all'\n}];\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSections = _useState2[0],\n      setActiveSections = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      collapsed = _useState4[0],\n      setCollapsed = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      multipleSelect = _useState6[0],\n      setMultipleSelect = _useState6[1];\n\n  var toggleExpanded = function toggleExpanded() {\n    setCollapsed(!collapsed);\n  };\n\n  var setSections = function setSections(sections) {\n    setActiveSections(sections.includes(undefined) ? [] : sections);\n  };\n\n  var renderHeader = function renderHeader(section, _, isActive) {\n    return _jsx(Animatable.View, {\n      duration: 400,\n      style: [styles.header, isActive ? styles.active : styles.inactive],\n      transition: \"backgroundColor\",\n      children: _jsx(Text, {\n        style: styles.headerText,\n        children: section.title\n      })\n    });\n  };\n\n  var renderContent = function renderContent(section, _, isActive) {\n    return _jsx(Animatable.View, {\n      duration: 400,\n      style: [styles.content, isActive ? styles.active : styles.inactive],\n      transition: \"backgroundColor\",\n      children: _jsx(Animatable.Text, {\n        animation: isActive ? 'bounceIn' : undefined,\n        style: {\n          textAlign: 'center'\n        },\n        children: section.content\n      })\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Example of Collapsible/Accordion/Expandable Listview in React Native\"\n        }), _jsx(TouchableOpacity, {\n          onPress: toggleExpanded,\n          children: _jsx(View, {\n            style: styles.header,\n            children: _jsx(Text, {\n              style: styles.headerText,\n              children: \"Single Collapsible\"\n            })\n          })\n        }), _jsx(Collapsible, {\n          collapsed: collapsed,\n          align: \"center\",\n          children: _jsx(View, {\n            style: styles.content,\n            children: _jsx(Text, {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"This is a dummy text of Single Collapsible View\"\n            })\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF',\n    paddingTop: 30\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 18,\n    fontWeight: '300',\n    marginBottom: 20\n  },\n  header: {\n    backgroundColor: '#F5FCFF',\n    padding: 10\n  },\n  headerText: {\n    textAlign: 'center',\n    fontSize: 16,\n    fontWeight: '500'\n  },\n  content: {\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  active: {\n    backgroundColor: 'rgba(255,255,255,1)'\n  },\n  inactive: {\n    backgroundColor: 'rgba(245,252,255,1)'\n  },\n  selectors: {\n    marginBottom: 10,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  selector: {\n    backgroundColor: '#F5FCFF',\n    padding: 10\n  },\n  activeSelector: {\n    fontWeight: 'bold'\n  },\n  selectTitle: {\n    fontSize: 14,\n    fontWeight: '500',\n    padding: 10,\n    textAlign: 'center'\n  },\n  multipleToggle: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginVertical: 30,\n    alignItems: 'center'\n  },\n  multipleToggle__title: {\n    fontSize: 16,\n    marginRight: 8\n  }\n});","map":{"version":3,"sources":["D:/pelatihan/batch 29/react native/todolist/src/screen/todo.js"],"names":["React","useState","Animatable","Collapsible","Accordion","CONTENT","title","content","SELECTORS","value","App","activeSections","setActiveSections","collapsed","setCollapsed","multipleSelect","setMultipleSelect","toggleExpanded","setSections","sections","includes","undefined","renderHeader","section","_","isActive","styles","header","active","inactive","headerText","renderContent","textAlign","flex","container","StyleSheet","create","backgroundColor","paddingTop","fontSize","fontWeight","marginBottom","padding","selectors","flexDirection","justifyContent","selector","activeSelector","selectTitle","multipleToggle","marginVertical","alignItems","multipleToggle__title","marginRight"],"mappings":"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","sourcesContent":["// import React in our code\r\nimport React, {useState} from 'react';\r\n\r\n// import all the components we are going to use\r\nimport {\r\n  SafeAreaView,\r\n  Switch,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\n\r\n// import for the animation of Collapse and Expand\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\n// import for the collapsible/Expandable view\r\nimport Collapsible from 'react-native-collapsible';\r\n\r\n// import for the Accordion view\r\nimport Accordion from 'react-native-collapsible/Accordion';\r\n\r\n// Dummy content to show\r\n// You can also use dynamic data by calling web service\r\nconst CONTENT = [\r\n  {\r\n    title: 'Terms and Conditions',\r\n    content:\r\n      'The following terms and conditions, together with any referenced documents form a legal agreement between you and your employer, employees,agents, contractors and any other entity on whose behalf you accept these terms',\r\n  },\r\n  {\r\n    title: 'Privacy Policy',\r\n    content:\r\n      'A Privacy Policy agreement is the agreement where you specify if you collect personal data from your users,what kind of personal data you collect and what you dowith that data.',\r\n  },\r\n  {\r\n    title: 'Return Policy',\r\n    content:\r\n      \"Our Return & Refund Policy template lets you get started with a Return and Refund Policy agreement. This template is free to download and use. According to TrueShip study, over 60% of customers review a Return/Refund      Policy before they make a purchasing decision.\",\r\n  },\r\n];\r\n\r\n//To make the selector (Something like tabs)\r\nconst SELECTORS = [\r\n  {title: 'T&C', value: 0},\r\n  {title: 'Privacy Policy', value: 1},\r\n  {title: 'Return Policy', value: 2},\r\n  {title: 'Reset all'},\r\n];\r\n\r\nconst App = () => {\r\n  // Default active selector\r\n  const [activeSections, setActiveSections] = useState([]);\r\n  // Collapsed condition for the single collapsible\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  // MultipleSelect is for the Multiple Expand allowed\r\n  // True: Expand multiple at a time\r\n  // False: One can be expand at a time\r\n  const [multipleSelect, setMultipleSelect] = useState(false);\r\n\r\n  const toggleExpanded = () => {\r\n    // Toggling the state of single Collapsible\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const setSections = (sections) => {\r\n    // Setting up a active section state\r\n    setActiveSections(\r\n      sections.includes(undefined) ? [] : sections\r\n    );\r\n  };\r\n\r\n  const renderHeader = (section, _, isActive) => {\r\n    // Accordion header view\r\n    return (\r\n      <Animatable.View\r\n        duration={400}\r\n        style={[\r\n          styles.header,\r\n          isActive ? styles.active : styles.inactive\r\n        ]}\r\n        transition=\"backgroundColor\">\r\n        <Text style={styles.headerText}>\r\n          {section.title}\r\n        </Text>\r\n      </Animatable.View>\r\n    );\r\n  };\r\n\r\n  const renderContent = (section, _, isActive) => {\r\n    // Accordion Content view\r\n    return (\r\n      <Animatable.View\r\n        duration={400}\r\n        style={[\r\n          styles.content,\r\n          isActive ? styles.active : styles.inactive\r\n        ]}\r\n        transition=\"backgroundColor\">\r\n        <Animatable.Text\r\n          animation={isActive ? 'bounceIn' : undefined}\r\n          style={{textAlign: 'center'}}>\r\n          {section.content}\r\n        </Animatable.Text>\r\n      </Animatable.View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{flex: 1}}>\r\n      <View style={styles.container}>\r\n        <ScrollView>\r\n          <Text style={styles.title}>\r\n            Example of Collapsible/Accordion/Expandable\r\n            Listview in React\r\n            Native\r\n          </Text>\r\n\r\n          {/*Code for Single Collapsible Start*/}\r\n          <TouchableOpacity onPress={toggleExpanded}>\r\n            <View style={styles.header}>\r\n              <Text style={styles.headerText}>\r\n                Single Collapsible\r\n              </Text>\r\n              {/*Heading of Single Collapsible*/}\r\n            </View>\r\n          </TouchableOpacity>\r\n          {/*Content of Single Collapsible*/}\r\n          <Collapsible\r\n            collapsed={collapsed}\r\n            align=\"center\"\r\n          >\r\n            <View style={styles.content}>\r\n              <Text style={{textAlign: 'center'}}>\r\n                This is a dummy text of Single Collapsible View\r\n              </Text>\r\n            </View>\r\n          </Collapsible>\r\n          {/*Code for Single Collapsible Ends*/}\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5FCFF',\r\n    paddingTop: 30,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    fontWeight: '300',\r\n    marginBottom: 20,\r\n  },\r\n  header: {\r\n    backgroundColor: '#F5FCFF',\r\n    padding: 10,\r\n  },\r\n  headerText: {\r\n    textAlign: 'center',\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n  },\r\n  content: {\r\n    padding: 20,\r\n    backgroundColor: '#fff',\r\n  },\r\n  active: {\r\n    backgroundColor: 'rgba(255,255,255,1)',\r\n  },\r\n  inactive: {\r\n    backgroundColor: 'rgba(245,252,255,1)',\r\n  },\r\n  selectors: {\r\n    marginBottom: 10,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  selector: {\r\n    backgroundColor: '#F5FCFF',\r\n    padding: 10,\r\n  },\r\n  activeSelector: {\r\n    fontWeight: 'bold',\r\n  },\r\n  selectTitle: {\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n    padding: 10,\r\n    textAlign: 'center',\r\n  },\r\n  multipleToggle: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginVertical: 30,\r\n    alignItems: 'center',\r\n  },\r\n  multipleToggle__title: {\r\n    fontSize: 16,\r\n    marginRight: 8,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}