{"ast":null,"code":"import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer, useTheme } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nvar Tab = createBottomTabNavigator();\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport AddTodo from \"../screen/addtodo\";\nimport FinishTodo from \"../screen/finishedtodo\";\nimport Todo from \"../screen/todo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Container() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === 'Todo') {\n              iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n            } else if (route.name === 'Finish todo') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray'\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Todo\",\n        component: Todo\n      }), _jsx(Tab.Screen, {\n        name: \"Add todo\",\n        component: AddTodo\n      }), _jsx(Tab.Screen, {\n        name: \"Finish todo\",\n        component: FinishTodo\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["D:/pelatihan/batch 29/react native/todolist/src/route/container.js"],"names":["createStackNavigator","NavigationContainer","useTheme","createBottomTabNavigator","Tab","Ionicons","AddTodo","FinishTodo","Todo","Container","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,EAA8BC,QAA9B,QAA8C,0BAA9C;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,IAAMC,GAAG,GAAGD,wBAAwB,EAApC;AACA,OAAOE,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,SACM,KAAC,mBAAD;AAAA,cACI,MAAC,GAAD,CAAK,SAAL;AACA,MAAA,aAAa,EAAE;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC3BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;AACxC,gBAAIC,QAAJ;;AAEA,gBAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AACzBD,cAAAA,QAAQ,GAAGH,OAAO,GACd,wBADc,GAEd,gCAFJ;AAGD,aAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,aAAnB,EAAkC;AACvCD,cAAAA,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,UAAtC;AACD;;AAGD,mBAAO,KAAC,QAAD;AAAU,cAAA,IAAI,EAAEG,QAAhB;AAA0B,cAAA,IAAI,EAAED,IAAhC;AAAsC,cAAA,KAAK,EAAED;AAA7C,cAAP;AACD,WAd0B;AAe3BI,UAAAA,qBAAqB,EAAE,QAfI;AAgB3BC,UAAAA,uBAAuB,EAAE;AAhBE,SAAhB;AAAA,OADf;AAAA,iBAoBI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEV;AAAnC,QApBJ,EAqBI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,SAAS,EAAEF;AAAvC,QArBJ,EAsBI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,aAAjB;AAA+B,QAAA,SAAS,EAAEC;AAA1C,QAtBJ;AAAA;AADJ,IADN;AA4BD","sourcesContent":["import { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer, useTheme } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nconst Tab = createBottomTabNavigator();\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport AddTodo from '../screen/addtodo';\r\nimport FinishTodo from '../screen/finishedtodo';\r\nimport Todo from '../screen/todo';\r\n\r\nexport default function Container() {\r\n  return (\r\n        <NavigationContainer>\r\n            <Tab.Navigator\r\n            screenOptions={({ route }) => ({\r\n                tabBarIcon: ({ focused, color, size }) => {\r\n                  let iconName;\r\n      \r\n                  if (route.name === 'Todo') {\r\n                    iconName = focused\r\n                      ? 'ios-information-circle'\r\n                      : 'ios-information-circle-outline';\r\n                  } else if (route.name === 'Finish todo') {\r\n                    iconName = focused ? 'ios-list-box' : 'ios-list';\r\n                  }\r\n      \r\n                  // You can return any component that you like here!\r\n                  return <Ionicons name={iconName} size={size} color={color} />;\r\n                },\r\n                tabBarActiveTintColor: 'tomato',\r\n                tabBarInactiveTintColor: 'gray',\r\n              })}\r\n            >\r\n                <Tab.Screen name=\"Todo\" component={Todo} />\r\n                <Tab.Screen name=\"Add todo\" component={AddTodo} />\r\n                <Tab.Screen name=\"Finish todo\" component={FinishTodo} />\r\n            </Tab.Navigator>\r\n        </NavigationContainer>\r\n        );\r\n}"]},"metadata":{},"sourceType":"module"}