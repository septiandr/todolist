{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport * as Animatable from 'react-native-animatable';\nimport Accordion from 'react-native-collapsible/Accordion';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CONTENT = [{\n  id: 1,\n  title: 'Terms and Conditions',\n  jam: '12.00',\n  content: 'The following terms and conditions, together with any referenced documents form a legal agreement between you and your employer, employees,agents, contractors and any other entity on whose behalf you accept these terms'\n}, {\n  id: 2,\n  title: 'Privacy Policy',\n  jam: 12.00,\n  content: 'A Privacy Policy agreement is the agreement where you specify if you collect personal data from your users,what kind of personal data you collect and what you dowith that data.'\n}, {\n  id: 3,\n  title: 'Return Policy',\n  jam: 12.00,\n  content: \"Our Return & Refund Policy template lets you get started with a Return and Refund Policy agreement. This template is free to download and use. According to TrueShip study, over 60% of customers review a Return/Refund      Policy before they make a purchasing decision.\"\n}];\n\nvar Todo = function Todo() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  useEffect(function () {\n    getPost();\n  }, []);\n\n  var getPost = function getPost() {\n    setIsLoading(true);\n    axios.get('https://61e26aba3050a10017682175.mockapi.io/todo').then(function (res) {\n      setPost(res.data);\n      setIsLoading(false);\n    }).catch(function () {\n      alert('Error Fetch Data');\n      setIsLoading(false);\n    });\n  };\n\n  console.log(post);\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeSections = _useState6[0],\n      setActiveSections = _useState6[1];\n\n  var setSections = function setSections(sections) {\n    setActiveSections(sections.includes(undefined) ? [] : sections);\n  };\n\n  var renderHeader = function renderHeader(section, _, isActive) {\n    return _jsx(Animatable.View, {\n      duration: 400,\n      style: [styles.header, isActive ? styles.active : styles.inactive],\n      transition: \"backgroundColor\",\n      children: _jsx(Text, {\n        style: styles.headerText,\n        children: section.title\n      })\n    });\n  };\n\n  var renderContent = function renderContent(section, _, isActive) {\n    return _jsxs(Animatable.View, {\n      duration: 400,\n      style: [styles.content, isActive ? styles.active : styles.inactive],\n      transition: \"backgroundColor\",\n      children: [_jsxs(Text, {\n        children: [_jsx(\"span\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Description:\"\n        }), section.desription]\n      }), _jsxs(Text, {\n        style: {\n          marginTop: 20\n        },\n        children: [_jsx(\"span\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Time:\"\n        }), section.time]\n      }), _jsx(Pressable, {\n        style: styles.btn,\n        children: _jsx(Text, {\n          style: styles.btntxt,\n          children: \"Done\"\n        })\n      })]\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(ScrollView, {\n        children: _jsx(Accordion, {\n          activeSections: activeSections,\n          sections: post,\n          renderHeader: renderHeader,\n          renderContent: renderContent,\n          duration: 400,\n          onChange: setSections\n        })\n      })\n    })\n  });\n};\n\nexport default Todo;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    marginLeft: 20\n  },\n  headerText: {\n    textAlign: 'left',\n    marginLeft: 20,\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  content: {\n    padding: 20,\n    backgroundColor: '#fff',\n    color: 'black'\n  },\n  active: {\n    backgroundColor: 'white'\n  },\n  inactive: {\n    backgroundColor: 'gray'\n  },\n  header: {\n    color: 'white',\n    marginTop: 10,\n    width: 330,\n    height: 30,\n    borderRadius: 5\n  },\n  btn: {\n    marginLeft: 250,\n    backgroundColor: 'green',\n    borderRadius: 5,\n    width: 50,\n    height: 30,\n    marginTop: 20\n  },\n  btntxt: {\n    marginLeft: 7,\n    color: 'white',\n    marginTop: 5,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["D:/pelatihan/batch 29/react native/todolist/src/screen/todo.js"],"names":["React","useState","Animatable","Accordion","axios","useEffect","CONTENT","id","title","jam","content","Todo","post","setPost","isLoading","setIsLoading","getPost","get","then","res","data","catch","alert","console","log","activeSections","setActiveSections","setSections","sections","includes","undefined","renderHeader","section","_","isActive","styles","header","active","inactive","headerText","renderContent","fontWeight","desription","marginTop","time","btn","btntxt","flex","container","StyleSheet","create","paddingTop","marginLeft","textAlign","fontSize","color","padding","backgroundColor","width","height","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n  SafeAreaView,\r\n\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  View,Pressable\r\n } from 'react-native';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport Accordion from 'react-native-collapsible/Accordion';\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react';\r\nconst CONTENT = [\r\n  {\r\n    id:1,  \r\n    title: 'Terms and Conditions',\r\n    jam:'12.00',\r\n    content:\r\n      'The following terms and conditions, together with any referenced documents form a legal agreement between you and your employer, employees,agents, contractors and any other entity on whose behalf you accept these terms',\r\n  },\r\n  {\r\n    id:2,  \r\n    title: 'Privacy Policy',\r\n    jam:12.00,\r\n    content:\r\n      'A Privacy Policy agreement is the agreement where you specify if you collect personal data from your users,what kind of personal data you collect and what you dowith that data.',\r\n  },\r\n  { id:3,  \r\n    title: 'Return Policy',\r\n    jam:12.00,\r\n    content:\r\n      \"Our Return & Refund Policy template lets you get started with a Return and Refund Policy agreement. This template is free to download and use. According to TrueShip study, over 60% of customers review a Return/Refund      Policy before they make a purchasing decision.\",\r\n  },\r\n];\r\n\r\n\r\nconst Todo = () => {\r\n    const [post, setPost] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        getPost()\r\n    },[])\r\n    const getPost = () => {\r\n        setIsLoading(true)\r\n        axios\r\n            .get('https://61e26aba3050a10017682175.mockapi.io/todo')\r\n            .then((res)=>{\r\n                setPost(res.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(()=> {\r\n                alert('Error Fetch Data')\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n    console.log(post)\r\n  const [activeSections, setActiveSections] = useState([]);\r\n  const setSections = (sections) => {\r\n      setActiveSections(\r\n      sections.includes(undefined) ? [] : sections\r\n    );\r\n  };\r\n  const renderHeader = (section, _, isActive) => {\r\n      return (\r\n      <Animatable.View\r\n        duration={400}\r\n        style={[\r\n          styles.header,\r\n          isActive ? styles.active : styles.inactive\r\n        ]}\r\n        transition=\"backgroundColor\">\r\n        <Text style={styles.headerText}>\r\n          {section.title}\r\n        </Text>\r\n      </Animatable.View>\r\n    );\r\n  };\r\n\r\n  const renderContent = (section, _, isActive) => {\r\n    // Accordion Content view\r\n    return (\r\n      <Animatable.View\r\n        duration={400}\r\n        style={[\r\n          styles.content,\r\n          isActive ? styles.active : styles.inactive\r\n        ]}\r\n        transition=\"backgroundColor\">\r\n        <Text><span style={{fontWeight:'bold'}}>Description:</span>{section.desription}</Text>\r\n        <Text style={{marginTop:20}}><span style={{fontWeight:'bold'}}>Time:</span>{section.time}</Text>\r\n        <Pressable style={styles.btn}><Text style={styles.btntxt}>Done</Text></Pressable>\r\n      </Animatable.View>\r\n    );\r\n  };\r\n  return (\r\n    <SafeAreaView style={{flex: 1}}>\r\n      <View style={styles.container}>\r\n        <ScrollView>\r\n        <Accordion\r\n            activeSections={activeSections}\r\n            sections={post}\r\n            renderHeader={renderHeader}\r\n            renderContent={renderContent}\r\n            duration={400}\r\n            onChange={setSections}\r\n          />\r\n\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 20,\r\n    marginLeft:20\r\n  },\r\n  headerText: {\r\n    textAlign: 'left',\r\n    marginLeft:20,\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color:'black'\r\n  },\r\n  content: {\r\n    padding: 20,\r\n    backgroundColor: '#fff',\r\n    color:'black'\r\n  },\r\n  active: {\r\n    backgroundColor: 'white',\r\n  },\r\n  inactive: {\r\n    backgroundColor: 'gray',\r\n  },\r\n  header:{\r\n      color:'white',\r\n      marginTop:10,\r\n      width:330,\r\n      height:30,\r\n      borderRadius:5\r\n  },\r\n  btn :{\r\n    marginLeft:250,backgroundColor:'green',borderRadius:5, width:50,height:30,marginTop:20\r\n  },\r\n  btntxt:{\r\n    marginLeft:7,color:'white',marginTop:5,fontWeight:'bold'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}