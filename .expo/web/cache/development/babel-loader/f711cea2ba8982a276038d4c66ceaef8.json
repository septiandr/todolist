{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport * as Animatable from 'react-native-animatable';\nimport Collapsible from 'react-native-collapsible';\nimport Accordion from 'react-native-collapsible/Accordion';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CONTENT = [{\n  id: 1,\n  title: 'Terms and Conditions',\n  content: 'The following terms and conditions, together with any referenced documents form a legal agreement between you and your employer, employees,agents, contractors and any other entity on whose behalf you accept these terms'\n}, {\n  id: 2,\n  title: 'Privacy Policy',\n  content: 'A Privacy Policy agreement is the agreement where you specify if you collect personal data from your users,what kind of personal data you collect and what you dowith that data.'\n}, {\n  id: 3,\n  title: 'Return Policy',\n  content: \"Our Return & Refund Policy template lets you get started with a Return and Refund Policy agreement. This template is free to download and use. According to TrueShip study, over 60% of customers review a Return/Refund      Policy before they make a purchasing decision.\"\n}];\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSections = _useState2[0],\n      setActiveSections = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      collapsed = _useState4[0],\n      setCollapsed = _useState4[1];\n\n  var toggleExpanded = function toggleExpanded() {\n    setCollapsed(!collapsed);\n  };\n\n  var setSections = function setSections(sections) {\n    setActiveSections(sections.includes(undefined) ? [] : sections);\n  };\n\n  var renderHeader = function renderHeader(section, _, isActive) {\n    return _jsx(Animatable.View, {\n      duration: 400,\n      style: [styles.header, isActive ? styles.active : styles.inactive],\n      transition: \"backgroundColor\",\n      children: _jsx(Text, {\n        style: styles.headerText,\n        children: section.title\n      })\n    });\n  };\n\n  var renderContent = function renderContent(section, _, isActive) {\n    return _jsx(Animatable.View, {\n      duration: 400,\n      style: [styles.content, isActive ? styles.active : styles.inactive],\n      transition: \"backgroundColor\",\n      children: _jsx(Animatable.Text, {\n        animation: isActive ? 'bounceIn' : undefined,\n        style: {\n          textAlign: 'center'\n        },\n        children: section.content\n      })\n    });\n  };\n\n  var todo = function todo(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      children: [_jsx(Pressable, {\n        onPress: toggleExpanded,\n        style: {\n          marginLeft: 20,\n          marginTop: 20\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: 'bold'\n          },\n          children: item.title\n        })\n      }), _jsx(Pressable, {\n        style: {\n          marginRight: 15,\n          backgroundColor: 'red',\n          borderRadius: 5,\n          width: 50,\n          height: 30,\n          marginTop: 20\n        },\n        children: _jsx(Text, {\n          style: {\n            marginLeft: 4,\n            color: 'white',\n            marginTop: 5,\n            fontWeight: 'bold'\n          },\n          children: \"Delete\"\n        })\n      }), _jsx(Collapsible, {\n        collapsed: collapsed,\n        align: \"center\",\n        children: _jsx(View, {\n          style: styles.content,\n          children: _jsx(Text, {\n            style: {\n              textAlign: 'center'\n            },\n            children: \"This is a dummy text of Single Collapsible View\"\n          })\n        })\n      })]\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(ScrollView, {\n        children: _jsx(Accordion, {\n          activeSections: activeSections,\n          sections: CONTENT,\n          renderHeader: todo,\n          renderContent: renderContent,\n          duration: 400,\n          onChange: setSections\n        })\n      })\n    })\n  });\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF',\n    paddingTop: 30\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 18,\n    fontWeight: '300',\n    marginBottom: 20\n  },\n  header: {\n    backgroundColor: '#F5FCFF',\n    padding: 10\n  },\n  headerText: {\n    textAlign: 'center',\n    fontSize: 16,\n    fontWeight: '500'\n  },\n  content: {\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  active: {\n    backgroundColor: 'rgba(255,255,255,1)'\n  },\n  inactive: {\n    backgroundColor: 'rgba(245,252,255,1)'\n  },\n  selectors: {\n    marginBottom: 10,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  selector: {\n    backgroundColor: '#F5FCFF',\n    padding: 10\n  },\n  activeSelector: {\n    fontWeight: 'bold'\n  },\n  selectTitle: {\n    fontSize: 14,\n    fontWeight: '500',\n    padding: 10,\n    textAlign: 'center'\n  },\n  multipleToggle: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginVertical: 30,\n    alignItems: 'center'\n  },\n  multipleToggle__title: {\n    fontSize: 16,\n    marginRight: 8\n  }\n});","map":{"version":3,"sources":["D:/pelatihan/batch 29/react native/todolist/src/screen/todo.js"],"names":["React","useState","Animatable","Collapsible","Accordion","CONTENT","id","title","content","App","activeSections","setActiveSections","collapsed","setCollapsed","toggleExpanded","setSections","sections","includes","undefined","renderHeader","section","_","isActive","styles","header","active","inactive","headerText","renderContent","textAlign","todo","item","flex","flexDirection","justifyContent","marginLeft","marginTop","fontSize","fontWeight","marginRight","backgroundColor","borderRadius","width","height","color","container","StyleSheet","create","paddingTop","marginBottom","padding","selectors","selector","activeSelector","selectTitle","multipleToggle","marginVertical","alignItems","multipleToggle__title"],"mappings":"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","sourcesContent":["// import React in our code\r\nimport React, {useState} from 'react';\r\n\r\n// import all the components we are going to use\r\nimport {\r\n  SafeAreaView,\r\n  FlatList,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  View,Pressable\r\n } from 'react-native';\r\n\r\n// import for the animation of Collapse and Expand\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\n// import for the collapsible/Expandable view\r\nimport Collapsible from 'react-native-collapsible';\r\n\r\n// import for the Accordion view\r\nimport Accordion from 'react-native-collapsible/Accordion';\r\n\r\n// Dummy content to show\r\n// You can also use dynamic data by calling web service\r\nconst CONTENT = [\r\n  {\r\n    id:1,  \r\n    title: 'Terms and Conditions',\r\n    content:\r\n      'The following terms and conditions, together with any referenced documents form a legal agreement between you and your employer, employees,agents, contractors and any other entity on whose behalf you accept these terms',\r\n  },\r\n  {\r\n    id:2,  \r\n    title: 'Privacy Policy',\r\n    content:\r\n      'A Privacy Policy agreement is the agreement where you specify if you collect personal data from your users,what kind of personal data you collect and what you dowith that data.',\r\n  },\r\n  { id:3,  \r\n    title: 'Return Policy',\r\n    content:\r\n      \"Our Return & Refund Policy template lets you get started with a Return and Refund Policy agreement. This template is free to download and use. According to TrueShip study, over 60% of customers review a Return/Refund      Policy before they make a purchasing decision.\",\r\n  },\r\n];\r\n\r\n//To make the selector (Something like tabs)\r\n\r\nconst App = () => {\r\n  // Default active selector\r\n  const [activeSections, setActiveSections] = useState([]);\r\n  // Collapsed condition for the single collapsible\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  // MultipleSelect is for the Multiple Expand allowed\r\n  // True: Expand multiple at a time\r\n  // False: One can be expand at a time\r\n  const toggleExpanded = () => {\r\n    // Toggling the state of single Collapsible\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const setSections = (sections) => {\r\n    // Setting up a active section state\r\n    setActiveSections(\r\n      sections.includes(undefined) ? [] : sections\r\n    );\r\n  };\r\n\r\n  const renderHeader = (section, _, isActive) => {\r\n    // Accordion header view\r\n    return (\r\n      <Animatable.View\r\n        duration={400}\r\n        style={[\r\n          styles.header,\r\n          isActive ? styles.active : styles.inactive\r\n        ]}\r\n        transition=\"backgroundColor\">\r\n        <Text style={styles.headerText}>\r\n          {section.title}\r\n        </Text>\r\n      </Animatable.View>\r\n    );\r\n  };\r\n\r\n  const renderContent = (section, _, isActive) => {\r\n    // Accordion Content view\r\n    return (\r\n      <Animatable.View\r\n        duration={400}\r\n        style={[\r\n          styles.content,\r\n          isActive ? styles.active : styles.inactive\r\n        ]}\r\n        transition=\"backgroundColor\">\r\n        <Animatable.Text\r\n          animation={isActive ? 'bounceIn' : undefined}\r\n          style={{textAlign: 'center'}}>\r\n          {section.content}\r\n        </Animatable.Text>\r\n      </Animatable.View>\r\n    );\r\n  };\r\n  const todo =({item})=>{\r\n    return(<View style={{flex:1,flexDirection:'row',justifyContent:'space-between'}}>\r\n        <Pressable onPress={toggleExpanded} style={{marginLeft:20,marginTop:20}}>\r\n            <Text style={{fontSize:20,fontWeight:'bold'}}>{item.title}</Text>\r\n        </Pressable>\r\n        <Pressable style={{marginRight:15,backgroundColor:'red',borderRadius:5, width:50,height:30,marginTop:20}}>\r\n            <Text style={{marginLeft:4,color:'white',marginTop:5,fontWeight:'bold'}}>Delete</Text>\r\n        </Pressable>\r\n        <Collapsible\r\n            collapsed={collapsed}\r\n            align=\"center\"\r\n            >\r\n            <View style={styles.content}>\r\n                <Text style={{textAlign: 'center'}}>\r\n                This is a dummy text of Single Collapsible View\r\n                </Text>\r\n            </View>\r\n            </Collapsible>\r\n    </View>\r\n    )\r\n}\r\n  return (\r\n    <SafeAreaView style={{flex: 1}}>\r\n      <View style={styles.container}>\r\n        <ScrollView>\r\n        <Accordion\r\n            activeSections={activeSections}\r\n            // For any default active section\r\n            sections={CONTENT}\r\n            // If you want to expand multiple at a time\r\n            renderHeader={todo}\r\n            // Header Component(View) to render\r\n            renderContent={renderContent}\r\n            // Content Component(View) to render\r\n            duration={400}\r\n            // Duration for Collapse and expand\r\n            onChange={setSections}\r\n            // Setting the state of active sections\r\n          />\r\n\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5FCFF',\r\n    paddingTop: 30,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    fontWeight: '300',\r\n    marginBottom: 20,\r\n  },\r\n  header: {\r\n    backgroundColor: '#F5FCFF',\r\n    padding: 10,\r\n  },\r\n  headerText: {\r\n    textAlign: 'center',\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n  },\r\n  content: {\r\n    padding: 20,\r\n    backgroundColor: '#fff',\r\n  },\r\n  active: {\r\n    backgroundColor: 'rgba(255,255,255,1)',\r\n  },\r\n  inactive: {\r\n    backgroundColor: 'rgba(245,252,255,1)',\r\n  },\r\n  selectors: {\r\n    marginBottom: 10,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  selector: {\r\n    backgroundColor: '#F5FCFF',\r\n    padding: 10,\r\n  },\r\n  activeSelector: {\r\n    fontWeight: 'bold',\r\n  },\r\n  selectTitle: {\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n    padding: 10,\r\n    textAlign: 'center',\r\n  },\r\n  multipleToggle: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginVertical: 30,\r\n    alignItems: 'center',\r\n  },\r\n  multipleToggle__title: {\r\n    fontSize: 16,\r\n    marginRight: 8,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}