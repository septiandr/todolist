{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useState } from \"react\";\nimport Accordion from 'react-native-collapsible/Accordion';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Todo() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSections = _useState2[0],\n      setState = _useState2[1];\n\n  var SECTIONS = [{\n    title: 'First',\n    content: 'Lorem ipsum...'\n  }, {\n    title: 'Second',\n    content: 'Lorem ipsum...'\n  }];\n\n  var _renderSectionTitle = function _renderSectionTitle(section) {\n    return _jsx(View, {\n      style: styles.content,\n      children: _jsx(Text, {\n        children: section.content\n      })\n    });\n  };\n\n  var _renderHeader = function _renderHeader(section) {\n    return _jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.headerText,\n        children: section.title\n      })\n    });\n  };\n\n  var _renderContent = function _renderContent(section) {\n    return _jsx(View, {\n      style: styles.content,\n      children: _jsx(Text, {\n        children: section.content\n      })\n    });\n  };\n\n  var _updateSections = function _updateSections(activeSections) {\n    setState({\n      activeSections: activeSections\n    });\n  };\n\n  return _jsx(Accordion, {\n    sections: SECTIONS,\n    activeSections: activeSections,\n    renderSectionTitle: _renderSectionTitle,\n    renderHeader: _renderHeader,\n    renderContent: _renderContent,\n    onChange: _updateSections\n  });\n}","map":{"version":3,"sources":["D:/pelatihan/batch 29/react native/todolist/src/screen/todo.js"],"names":["useState","Accordion","Todo","activeSections","setState","SECTIONS","title","content","_renderSectionTitle","section","styles","_renderHeader","header","headerText","_renderContent","_updateSections"],"mappings":";;;;;AAEA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;AAEA,eAAe,SAASC,IAAT,GAAe;AACtB,kBAAkCF,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAQG,cAAR;AAAA,MAAuBC,QAAvB;;AAEA,MAAMC,QAAQ,GAAG,CACb;AACAC,IAAAA,KAAK,EAAE,OADP;AAEAC,IAAAA,OAAO,EAAE;AAFT,GADa,EAKb;AACAD,IAAAA,KAAK,EAAE,QADP;AAEAC,IAAAA,OAAO,EAAE;AAFT,GALa,CAAjB;;AAUA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD,EAAa;AACrC,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACH,OAApB;AAAA,gBACE,KAAC,IAAD;AAAA,kBAAOE,OAAO,CAACF;AAAf;AADF,MADF;AAKD,GANH;;AAOA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACF,OAAD,EAAa;AAC/B,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACE,MAApB;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA,kBAAiCJ,OAAO,CAACH;AAAzC;AADF,MADF;AAKD,GANH;;AAQA,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACL,OAAD,EAAa;AAChC,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACH,OAApB;AAAA,gBACE,KAAC,IAAD;AAAA,kBAAOE,OAAO,CAACF;AAAf;AADF,MADF;AAKD,GANH;;AAQC,MAAOQ,eAAe,GAAG,SAAlBA,eAAkB,CAACZ,cAAD,EAAoB;AAC1CC,IAAAA,QAAQ,CAAC;AAAED,MAAAA,cAAc,EAAdA;AAAF,KAAD,CAAR;AACD,GAFF;;AAIL,SACI,KAAC,SAAD;AACA,IAAA,QAAQ,EAAEE,QADV;AAEA,IAAA,cAAc,EAAEF,cAFhB;AAGA,IAAA,kBAAkB,EAAEK,mBAHpB;AAIA,IAAA,YAAY,EAAEG,aAJd;AAKA,IAAA,aAAa,EAAEG,cALf;AAMA,IAAA,QAAQ,EAAEC;AANV,IADJ;AAWH","sourcesContent":["import { View,Text } from \"react-native\"\r\nimport { FlatList,Pressable } from \"react-native\";\r\nimport { useState } from \"react\";\r\nimport Accordion from 'react-native-collapsible/Accordion';\r\n\r\nexport default function Todo(){\r\n        const  [activeSections,setState] =useState([])\r\n    \r\n        const SECTIONS = [\r\n            {\r\n            title: 'First',\r\n            content: 'Lorem ipsum...',\r\n            },\r\n            {\r\n            title: 'Second',\r\n            content: 'Lorem ipsum...',\r\n            },\r\n        ];\r\n        const _renderSectionTitle = (section) => {\r\n            return (\r\n              <View style={styles.content}>\r\n                <Text>{section.content}</Text>\r\n              </View>\r\n            );\r\n          };\r\n        const _renderHeader = (section) => {\r\n            return (\r\n              <View style={styles.header}>\r\n                <Text style={styles.headerText}>{section.title}</Text>\r\n              </View>\r\n            );\r\n          };\r\n        \r\n        const _renderContent = (section) => {\r\n            return (\r\n              <View style={styles.content}>\r\n                <Text>{section.content}</Text>\r\n              </View>\r\n            );\r\n          };\r\n        \r\n         const  _updateSections = (activeSections) => {\r\n            setState({ activeSections });\r\n          };\r\n        \r\n    return(\r\n        <Accordion\r\n        sections={SECTIONS}\r\n        activeSections={activeSections}\r\n        renderSectionTitle={_renderSectionTitle}\r\n        renderHeader={_renderHeader}\r\n        renderContent={_renderContent}\r\n        onChange={_updateSections}\r\n      />\r\n    );\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}